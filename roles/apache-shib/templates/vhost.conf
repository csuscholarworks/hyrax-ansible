LoadModule passenger_module /usr/local/lib/ruby/gems/{{ ruby_version_directory }}/gems/passenger-{{ passenger_version }}/buildout/apache2/mod_passenger.so
<IfModule mod_passenger.c>
  PassengerRoot /usr/local/lib/ruby/gems/{{ ruby_version_directory }}/gems/passenger-{{ passenger_version }}
  PassengerDefaultRuby /usr/local/bin/ruby
  PassengerMaxPoolSize 5
  PassengerLoadShellEnvvars on
  PassengerStickySessions on
  PassengerAllowEncodedSlashes on
</IfModule>

<VirtualHost *:80>
    ServerName {{ scholarworks_host }}:80
    RewriteEngine On

    RewriteCond %{HTTPS} off
    RewriteRule (.*) https://%{SERVER_NAME}$1 [R,NE,L]

    AllowEncodedSlashes NoDecode
</VirtualHost>

<VirtualHost *:443>
    ServerName {{ scholarworks_host }}:443
    DocumentRoot /var/www/hyrax/current/public

    UseCanonicalName On
    ShibCompatValidUser On
    AllowEncodedSlashes On
    RewriteEngine On

    # dspace legacy urls
    RewriteRule /bitstream/(.*) http://dspace.calstate.edu/bitstream/$1 [R,NE,L]
    RewriteRule /feed/(.*) http://dspace.calstate.edu/feed/$1 [R,NE,L]
    RewriteRule /handle/(.*) http://dspace.calstate.edu/handle/$1 [R,NE,L]
    RewriteRule /oai/(.*) http://dspace.calstate.edu/oai/$1 [R,NE,L]
    RewriteRule /portal/(.*) http://dspace.calstate.edu/portal/web [R,NE,L]

    # bots love these, so block 'em
    RewriteRule "\.php" "-" [R=404,L]
    RewriteRule "\.env" "-" [R=404,L]

    <Directory /var/www/hyrax/current/public>
      Allow from all
      Options -MultiViews
      Require all granted
    </Directory>

    SetEnv AUTHENTICATION_TYPE shibboleth
    SetEnv AWS_ACCESS_KEY {{ aws_access_key }}
    SetEnv AWS_REGION {{ aws_region }}
    SetEnv AWS_SECRET_ACCESS_KEY {{ aws_secret_access_key }}
    SetEnv DATABASE {{ hyrax_database }}
    SetEnv DATABASE_PASSWORD {{ hyrax_database_user_password }}
    SetEnv DATABASE_URL {{ hyrax_database_url }}
    SetEnv DATABASE_USER {{ hyrax_database_user_username }}
    SetEnv DATA_PATH {{ data_path }}
    SetEnv EFS_MOUNT_DIR {{ efs_mount_dir }}
    SetEnv EFS_REGION {{ efs_region }}
    SetEnv EFS_VOLUME_ID {{ efs_volume_id }}
    SetEnv FCREPO_PATH {{ fcrepo_path }}
    SetEnv FEDORA_URL {{ fcrepo_url }}
    SetEnv GLACIER_S3_BUCKET {{ glacier_s3_bucket }}
    SetEnv HANDLE_SERVER {{ handle_server }}
    SetEnv HS_ADMIN {{ hs_admin }}
    SetEnv HS_PREFIX {{ hs_prefix }}
    SetEnv HS_PRIVATE_KEY {{ hs_private_key }}
    SetEnv HYRAX_POSTGRESQL_PASSWORD {{ hyrax_database_user_password }}
    SetEnv RAILS_ENV production
    SetEnv RAILS_SKIP_MIGRATIONS true
    SetEnv REDIS_PORT {{ redis_port }}
    SetEnv REDIS_SERVER {{ redis_url }}
    SetEnv SCHOLARWORKS_HOST {{ scholarworks_host }}
    SetEnv SECRET_KEY_BASE {{ hyrax_secret_key_base }}
    SetEnv SOLR_URL {{ solr_url }}
    SetEnv TMPDIR /data/tmp

    SSLEngine on
    SSLProtocol all -TLSv1.1 -TLSv1 -SSLv2 -SSLv3
    SSLProxyProtocol all -TLSv1.1 -TLSv1 -SSLv2 -SSLv3
    SSLCipherSuite HIGH:!aNULL:!MD5
    SSLCipherSuite ALL:+HIGH:!ADH:!EXP:!SSLv2:!SSLv3:!MEDIUM:!LOW:!NULL:!aNULL
    SSLProxyCipherSuite ALL:+HIGH:!ADH:!EXP:!SSLv2:!SSLv3:!MEDIUM:!LOW:!NULL:!aNULL

    ServerSignature Off
    SSLHonorCipherOrder on
    SSLCompression off
    SSLSessionTickets on
    SSLOptions +StrictRequire
    SSLCertificateFile /etc/pki/tls/certs/{{ scholarworks_host }}.cer
    SSLCertificateKeyFile /etc/pki/tls/private/{{ scholarworks_host }}-private.key
    SSLCertificateChainFile /etc/pki/tls/certs/{{ sholarworks_host }}-intermediate.cer

    ErrorLog logs/ssl_error_log
    TransferLog logs/ssl_access_log
    LogLevel warn

    # HSTS (mod_headers is required) (15768000 seconds = 6 months, 31536000 = year)
    Header always set Strict-Transport-Security "max-age=15768000; includeSubDomains"
    Header always edit Set-Cookie ^(.*)$ $1;HttpOnly;Secure
    RequestHeader set X_FORWARDED_PROTO 'https'

    Alias "/metadata" "/data/exports/metadata"
    Alias "/reports" "/data/exports/reports"

    <Directory "/data/exports">
      Require all granted
    </Directory>

    Alias /restricted /var/www/html/restricted
    Alias /shibboleth-sp /usr/share/shibboleth

    <Location "/sword">
        RequestHeader set On-Behalf-Of "{{ scholarworks_host }}"
        AuthType Basic
        AuthName "sword"
        AuthUserFile /etc/httpd/.htpasswd
        Require valid-user
    </Location>

    <Location /Shibboleth.sso>
        SetHandler shib
        PassengerEnabled on
    </Location>

    <Location /shibboleth-sp>
        Satisfy any
    </Location>

    <Location /users/auth/shibboleth>
        AuthType shibboleth
        ShibUseHeaders On
        ShibRequestSetting requireSession 1
        require valid-user
    </Location>

    <Location /users/auth/shibboleth/callback>
        AuthType shibboleth
        ShibUseHeaders On
        ShibRequestSetting requireSession 1
        require valid-user
    </Location>

    <Location /Shibboleth.sso/Logout>
        AuthType shibboleth
        ShibUseHeaders On
        ShibRequestSetting requireSession 1
        require valid-user
    </Location>

    <Location /dashboard>
        AuthType shibboleth
        ShibUseHeaders On
        ShibRequestSetting requireSession 1
        require valid-user
    </Location>

    <Location /restricted>
        AuthType shibboleth
        ShibUseHeaders On
        ShibRequestSetting requireSession 1
        require valid-user
    </Location>
</VirtualHost>

# ######################################
# GLOBAL! deny bad bots and IP addresses
# ######################################
#
# should be set after <VirtualHost>s see https://httpd.apache.org/docs/2.4/sections.html#merging
<Location "/">
  # AND-combine with preceding configuration sections
  AuthMerging And
  # include black list
  Include custom.d/globalblacklist.conf
</Location>
